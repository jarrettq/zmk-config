/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2
#define HM_TAPPING_TERM 300
#define HM_TAPPING_TERM_FAST 200
#define HM_PRIOR_IDLE 150
#define BT 3
#define CTLRP &hm_l LCTRL P //mod-tap ctrl for left hand
#define ALT_F &hm_l LALT F //mod-tap alt for left hand
#define GUI_W &hm_l LGUI W //mod-tap windows for left hand
#define CTL_L &hm_r RCTRL L //mod-tap ctrl for right hand
#define ALT_U &hm_r RALT U //mod-tap alt for right hand
#define GUI_Y &hm_r RGUI Y //mod-tap windows for right hand

/ {
  behaviors {        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <HM_TAPPING_TERM_FAST>;                // repeat on tap-into-hold
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;
        };

        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <HM_TAPPING_TERM>;
            quick-tap-ms = <HM_TAPPING_TERM_FAST>;
            require-prior-idle-ms = <HM_PRIOR_IDLE>;

            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;
        };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp TAB     &kp Q      GUI_W   ALT_F   CTLRP       &kp B
        &kp J       CTL_L      ALT_U   GUI_Y   &kp SCLN    &lt BT ESC

        &kp BSPC    &kp A      &kp R   &kp S   &kp T       &kp G
        &kp M       &kp N      &kp E   &kp I   &kp O       &kp QUOT

        &kp LSFT    &kp Z      &kp X        &kp C        &kp D         &kp V
        &kp K       &kp H      &kp COMMA    &kp DOT      &kp FSLH      &kp BSLH

                     &kp LGUI  &mo 1        &hm_l LCTRL SPACE  &kp SPACE   &kp RSFT &lt 2 ENTER
      >;
    };

    layer_1 {
      bindings = <
        &trans      &trans     &trans       &kp UP       &trans        &trans
        &trans      &kp 7      &kp 8        &kp 9        &trans        &kp GRAVE

        &kp DEL     &trans     &kp LEFT     &kp DOWN     &kp RIGHT     &kp LPAR
        &kp RPAR       &kp 4      &kp 5        &kp 6        &kp EQUAL     &trans

        &trans      &trans     &trans       &trans       &trans        &kp LBKT
        &kp RBKT    &kp 1      &kp 2        &kp 3        &kp MINUS     &mo 2

                     &trans    &trans        &trans       &trans        &trans   &kp 0
      >;
    };

    layer_2 {
      bindings = <
        &kp TAB     &kp Q      &kp W        &kp E        &kp R         &kp T
        &kp Y       &kp U      &kp I        &kp O        &kp P         &kp ESC

        &kp BSPC    &kp A      &kp S        &kp D        &kp F         &kp G
        &kp H       &kp J      &kp K        &kp L        &kp SCLN      &kp QUOT

        &kp LSFT    &kp Z      &kp X        &kp C        &kp V         &kp B
        &kp N       &kp M      &kp COMMA    &kp DOT      &kp SLASH     &trans

                     &trans    &trans        &trans       &trans        &trans   &trans
      >;
    };

    layer_3 {
      bindings = <
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
        &trans        &trans        &trans        &trans        &trans        &trans

        &trans        &trans        &trans        &trans        &trans        &trans
        &trans        &trans        &trans        &trans        &trans        &trans

        &trans        &trans        &trans        &trans        &trans        &trans
        &trans        &trans        &trans        &trans        &trans        &trans

                        &trans      &to 0         &trans        &studio_unlock        &trans  &trans
      >;
    };
  };
};